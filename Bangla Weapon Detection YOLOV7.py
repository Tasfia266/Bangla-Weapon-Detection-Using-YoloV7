# -*- coding: utf-8 -*-
"""YoloV7_Custom.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19PJmG3a_WsV3O5_U9J0_me0n58C98xDc
"""

from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive

# Making the directory for YOLOV7 files and folders

import os
if not os.path.isdir('TheCodingBug'):
  os.makedirs('TheCodingBug')

# Commented out IPython magic to ensure Python compatibility.
# %cd TheCodingBug

# Cloning the github repository

!git clone https://github.com/WongKinYiu/yolov7.git

# Go to yolov7 Folder

# Commented out IPython magic to ensure Python compatibility.
# %cd yolov7

# Downloading weights of YOLOv7x

!wget https://github.com/WongKinYiu/yolov7/releases/download/v0.1/yolov7x.pt

import yaml

yaml.__version__

!pip install pyyaml==5.3.1

yaml.__version__

# Training

!python train.py --device 0 --batch-size 8 --epochs 2000 --img 224 224 --data data/custom_data.yaml --hyp data/hyp.scratch.custom.yaml --cfg cfg/training/yolov7x-custom.yaml --weights yolov7x.pt --name yolov7x-custom

#Testing on single image

!python detect.py --weights runs/train/yolov7x-custom7/weights/last.pt --conf 0.5 --img-size 640 --source /content/drive/MyDrive/IMG20230513225131.jpg --no-trace

# Testing using webcam

from IPython.display import display, Javascript
from google.colab.output import eval_js
from base64 import b64decode

def take_photo(filename='photo.jpg', quality=0.8):
  js = Javascript('''
    async function takePhoto(quality) {
      const div = document.createElement('div');
      const capture = document.createElement('button');
      capture.textContent = 'Capture';
      div.appendChild(capture);
      const video = document.createElement('video');
      video.style.display = 'block';
      const stream = await navigator.mediaDevices.getUserMedia({video: true});
      document.body.appendChild(div);
      div.appendChild(video);
      video.srcObject = stream;
      await video.play();
      // Resize the output to fit the video element.
      google.colab.output.setIframeHeight(document.documentElement.scrollHeight, true);
      // Wait for Capture to be clicked.
      await new Promise((resolve) => capture.onclick = resolve);
      const canvas = document.createElement('canvas');
      canvas.width = video.videoWidth;
      canvas.height = video.videoHeight;
      canvas.getContext('2d').drawImage(video, 0, 0);
      stream.getVideoTracks()[0].stop();
      div.remove();
      return canvas.toDataURL('image/jpeg', quality);
    }
    ''')
  display(js)
  data = eval_js('takePhoto({})'.format(quality))
  binary = b64decode(data.split(',')[1])
  with open(filename, 'wb') as f:
    f.write(binary)
  return filename

from IPython.display import Image
try:
  filename = take_photo()
  print('Saved to {}'.format(filename))

  # Show the image which was just taken.
  display(Image(filename))
except Exception as err:
  # Errors will be thrown if the user does not have a webcam or if they do not
  # grant the page permission to access it.
  print(str(err))

!python detect.py --weights runs/train/yolov7x-custom7/weights/best.pt --conf 0.5 --img-size 224 --source photo.jpg --no-trace